receivers:
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
      http:
        endpoint: "0.0.0.0:4318"


  prometheus/keycloak:
    config:
      scrape_configs:
        # - job_name: 'kc'
        #   scrape_interval: 5s
        #   metrics_path: '/metrics'
        #   static_configs:
        #     - targets: ['keycloak:8080']

        - job_name: 'kc.user'
          scrape_interval: 5s
          metrics_path: '/realms/master/metrics' # Correct metrics path
          static_configs:
            - targets: ['keycloak:8080']

processors:
  batch:

exporters:
  debug:
    verbosity: detailed
  prometheus:
    endpoint: "0.0.0.0:8889"
    # namespace: otel
  otlphttp/logs:
    endpoint: "http://loki:3100/otlp"
    tls:
      insecure: true
    # batch:
    #   send_batch_size: 1024
    #   send_batch_max_size: 10MB
    # label_map:
    #   resource:
    #     service.name: kc
  otlp:
    endpoint: tempo:4317
    tls:
      insecure: true
# to opensearch
  # opensearch:
  #   logs_index: keycloak-uat
  #   http:
  #     endpoint: "http://elasticsearch:9200"
  #     tls:
  #       insecure: true

# to kafka
  # kafka:
  #   brokers: ["kafka-host:9092"] # Kafka broker endpoint
  #   topic: "kc-uat" # Kafka topic for logs (e.g. "your-log-topic")


connectors:
  spanmetrics:
    dimensions:
      - name: http.method
      - name: http.status_code
      - name: http.route

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp,spanmetrics]
    metrics:
      receivers: [otlp,spanmetrics]
      processors: [batch]
      exporters: [prometheus]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [debug,otlphttp/logs] # ,kafka
