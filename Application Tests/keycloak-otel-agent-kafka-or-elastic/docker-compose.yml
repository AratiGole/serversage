version: "3.9"

services:
  keycloak:
    # image: quay.io/keycloak/keycloak:25.0.1
    image: bitnami/keycloak:22.0.4
    # image: private-repo:5000/bse-kc-dev:dev-v0.7.90
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_BACKCHANNEL_DYNAMIC=true  
      # ---------------------- Database ----------------------
      - KEYCLOAK_DATABASE_HOST=host.docker.internal # postgres host ip
      - KEYCLOAK_DATABASE_USER=postgres
      - KEYCLOAK_DATABASE_PASSWORD=postgres
      - KEYCLOAK_DATABASE_NAME=otel
      # ---------------------- Metrics enable ----------------------
      - KC_HTTP_ENABLED=true
      - KC_HTTP_METRICS_HISTOGRAMS_ENABLED=true
      - KC_CACHE_METRICS_HISTOGRAMS_ENABLED=true
      - KC_HTTP_METRICS_SLOS=5,10,25,50,250,500,1000,2500,5000,10000
      - KC_METRICS_ENABLED=true # Enable metrics
      - KC_HEALTH_ENABLED=true # Enable Health Checks
      # - KEYCLOAK_ENABLE_STATISTICS=true
      # - KEYCLOAK_ENABLE_HEALTH_ENDPOINTS=true
      - KC_EVENT_METRICS_USER_ENABLED=true
      - KC_EVENT_METRICS_USER_EVENTS=authreqid_to_token, client_delete, client_info, client_initiated_account_linking, client_login, client_register, client_update, code_to_token, custom_required_action, delete_account, execute_action_token, execute_actions, federated_identity_link, federated_identity_override_link, grant_consent, identity_provider_first_login, identity_provider_link_account, identity_provider_login, identity_provider_post_login, identity_provider_response, identity_provider_retrieve_token, impersonate, introspect_token, invalid_signature, invite_org, login, logout, oauth2_device_auth, oauth2_device_code_to_token, oauth2_device_verify_user_code, oauth2_extension_grant, permission_token, pushed_authorization_request, refresh_token, register, register_node, remove_credential, remove_federated_identity, remove_totp, reset_password, restart_authentication, revoke_grant, send_identity_provider_link, send_reset_password, send_verify_email, token_exchange, unregister_node, update_consent, update_credential, update_email, update_password, update_profile, user_disabled_by_permanent_lockout, user_disabled_by_temporary_lockout, user_info_request, verify_email, verify_profile
      - KC_EVENT_METRICS_USER_TAGS=realm,clientId,idp
      # ---------------------- Logging enable ----------------------
      - KC_LOG=console  # Allow only one of (console,file,gelf)
      - KC_LOG_CONSOLE_COLOR=true
      - KC_LOG_CONSOLE_INCLUDE_TRACE=true
      - KC_LOG_CONSOLE_OUTPUT=json
      # - KC_LOG_CONSOLE_LEVEL=debug
      # ---------------------- Tracing enable ----------------------
      - KC_TRACING_ENABLED=true
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      # - KC_TRACING_ENDPOINT=http://otel-collector:4318
      # ---------------------- Tracing Working ---------------------
      - JAVA_TOOL_OPTIONS= -javaagent:/opt/opentelemetry-javaagent.jar -Dotel.resource.attributes=service.name=kc
    volumes:
      - ./data/etc/opentelemetry-javaagent.jar:/opt/opentelemetry-javaagent.jar
    ports:
      - "8080:8080"
      - "9000:9000"
    depends_on:
      - otel-collector
    extra_hosts:
    - "host.docker.internal:host-gateway"

  prometheus:
    image: prom/prometheus:latest
    user: "0"
    volumes:
      - ./data/etc/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: aniketxshinde/serversage:latest
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana/:/etc/grafana/
    environment:
      - GF_AUTH_ADMIN_USER=admin
      - GF_AUTH_ADMIN_PASSWORD=admin

# for tracing
  tempo:
    image: grafana/tempo:latest
    user: "0"
    command:
      - "--config.file=/etc/tempo.yaml"
    ports:
      - "4371:4371"
    volumes:
      - ./data/etc/tempo.yaml:/etc/tempo.yaml
      - ./data/tempo:/var/tempo/traces

# for logs
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./data/etc/loki-config.yaml:/etc/loki/local-config.yaml

  elasticsearch:
    image: docker.io/bitnami/elasticsearch:8
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - './data/elasticsearch/data:/bitnami/elasticsearch/data'

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command:
      - "--config=/etc/otel-collector-config.yaml"
    volumes:
      - ./data/etc/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      # - "4317:4317"
      - "4318:4318"

volumes:
  data: