---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: monitoring
type: Opaque
stringData:
  DB_USER: postgres
  DB_PASSWORD: postgres  # IMPORTANT: Replace with a strong, secure password
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-exporter-queries
  namespace: monitoring
data:
  queries.yaml: |
    pg_replication:
      query: |
        SELECT
          CASE
            WHEN NOT pg_is_in_recovery() THEN 0
            ELSE GREATEST(0, COALESCE(EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())), 0))
          END AS lag
      master: true
      metrics:
        - lag:
            usage: "GAUGE"
            description: "Replication lag behind master in seconds"

    pg_postmaster:
      query: |
        SELECT pg_postmaster_start_time() AS start_time_seconds
      master: true
      metrics:
        - start_time_seconds:
            usage: "GAUGE"
            description: "Time at which postmaster started"

    pg_database:
      query: |
        SELECT SUM(pg_database_size(pg_database.datname)) AS size
        FROM pg_database
      master: true
      metrics:
        - size:
            usage: "GAUGE"
            description: "Total database size in bytes"

    pg_stat_user_tables:
      query: |
        SELECT
          current_database() AS datname,
          schemaname,
          relname,
          seq_scan,
          seq_tup_read,
          idx_scan,
          idx_tup_fetch,
          n_tup_ins,
          n_tup_upd,
          n_tup_del,
          n_tup_hot_upd,
          n_live_tup,
          n_dead_tup,
          n_mod_since_analyze,
          COALESCE(last_vacuum, '1970-01-01Z') AS last_vacuum,
          COALESCE(last_autovacuum, '1970-01-01Z') AS last_autovacuum,
          COALESCE(last_analyze, '1970-01-01Z') AS last_analyze,
          COALESCE(last_autoanalyze, '1970-01-01Z') AS last_autoanalyze,
          vacuum_count,
          autovacuum_count,
          analyze_count,
          autoanalyze_count
        FROM pg_stat_user_tables
        LIMIT 100
      metrics:
        - datname:
            usage: "LABEL"
            description: "Database name"
        - schemaname:
            usage: "LABEL"
            description: "Schema name"
        - relname:
            usage: "LABEL"
            description: "Table name"
        - seq_scan:
            usage: "COUNTER"
            description: "Sequential scans initiated"
        - seq_tup_read:
            usage: "COUNTER"
            description: "Rows fetched by sequential scans"
        - idx_scan:
            usage: "COUNTER"
            description: "Index scans initiated"
        - idx_tup_fetch:
            usage: "COUNTER"
            description: "Rows fetched by index scans"
        - n_live_tup:
            usage: "GAUGE"
            description: "Estimated number of live rows"
        - n_dead_tup:
            usage: "GAUGE"
            description: "Estimated number of dead rows"
        - vacuum_count:
            usage: "COUNTER"
            description: "Manual vacuum count"
        - autovacuum_count:
            usage: "COUNTER"
            description: "Autovacuum count"

    pg_statio_user_tables:
      query: |
        SELECT
          current_database() AS datname,
          schemaname,
          relname,
          heap_blks_read,
          heap_blks_hit,
          idx_blks_read,
          idx_blks_hit,
          toast_blks_read,
          toast_blks_hit,
          tidx_blks_read,
          tidx_blks_hit
        FROM pg_statio_user_tables
        LIMIT 100
      metrics:
        - datname:
            usage: "LABEL"
            description: "Database name"
        - schemaname:
            usage: "LABEL"
            description: "Schema name"
        - relname:
            usage: "LABEL"
            description: "Table name"
        - heap_blks_read:
            usage: "COUNTER"
            description: "Disk blocks read from the table"
        - heap_blks_hit:
            usage: "COUNTER"
            description: "Buffer hits in the table"

    pg_stat_statements:
      query: |
        SELECT
          t2.rolname,
          t3.datname,
          query,
          calls,
          (total_plan_time + total_exec_time) / 1000 AS total_time_seconds,
          (min_plan_time + min_exec_time) / 1000 AS min_time_seconds,
          (max_plan_time + max_exec_time) / 1000 AS max_time_seconds,
          (mean_plan_time + mean_exec_time) / 1000 AS mean_time_seconds,
          (stddev_plan_time + stddev_exec_time) / 1000 AS stddev_time_seconds,
          rows,
          shared_blks_hit,
          shared_blks_read,
          shared_blks_dirtied,
          shared_blks_written
        FROM pg_stat_statements t1
        JOIN pg_roles t2 ON (t1.userid = t2.oid)
        JOIN pg_database t3 ON (t1.dbid = t3.oid)
        WHERE t2.rolname != 'rdsadmin'
        LIMIT 100
      master: true
      metrics:
        - rolname:
            usage: "LABEL"
            description: "User name"
        - datname:
            usage: "LABEL"
            description: "Database name"
        - query:
            usage: "LABEL"
            description: "SQL query"
        - calls:
            usage: "COUNTER"
            description: "Number of executions"
        - total_time_seconds:
            usage: "GAUGE"
            description: "Total execution time (seconds)"
        - shared_blks_hit:
            usage: "COUNTER"
            description: "Shared block cache hits"
        - shared_blks_read:
            usage: "COUNTER"
            description: "Shared blocks read"
        - shared_blks_written:
            usage: "COUNTER"
            description: "Shared blocks written"

    pg_never_used_indexes:
      query: |
        SELECT
          pi.schemaname,
          pi.relname,
          pi.indexrelname,
          pg_table_size(pi.indexrelid) AS index_size
        FROM pg_indexes pis
        JOIN pg_stat_user_indexes pi ON pis.schemaname = pi.schemaname
        LIMIT 100
      metrics:
        - schemaname:
            usage: "LABEL"
            description: "Schema name"
        - relname:
            usage: "LABEL"
            description: "Table name"
        - indexrelname:
            usage: "LABEL"
            description: "Index name"
        - index_size:
            usage: "GAUGE"
            description: "Size of index in bytes"

    # Commented-out queries (for reference)
    # pg_tablelocktops:
    #   query: |
    #     SELECT db.datname, relname AS tbname, mode AS locktype, COUNT(1) AS locknums
    #     FROM pg_database db
    #     JOIN pg_locks lk ON db.oid = lk.database
    #     JOIN pg_class cl ON lk.relation = cl.oid
    #     GROUP BY db.datname, relname, mode
    #     ORDER BY COUNT(1) DESC
    #     LIMIT 10
    #   metrics:
    #     - datname:
    #         usage: "LABEL"
    #         description: "Database name"
    #     - tbname:
    #         usage: "LABEL"
    #         description: "Table name"
    #     - locktype:
    #         usage: "LABEL"
    #         description: "Lock type"
    #     - locknums:
    #         usage: "COUNTER"
    #         description: "Number of locks"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-exporter
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-exporter
  template:
    metadata:
      labels:
        app: postgres-exporter
    spec:
      containers:
      - name: postgres-exporter
        image: prometheuscommunity/postgres-exporter
        args:
          - "--extend.query-path=/config/queries.yaml"
        env:
        - name: DATA_SOURCE_NAME
          value: "postgresql://postgres:postgres@postgresql-service.starmfv2-postgres.svc.cluster.local:5432/postgres?sslmode=disable"
        ports:
        - containerPort: 9187
        volumeMounts:
        - name: queries-volume
          mountPath: /config
      volumes:
      - name: queries-volume
        configMap:
          name: postgres-exporter-queries
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-exporter
  namespace: monitoring
spec:
  selector:
    app: postgres-exporter
  ports:
    - protocol: TCP
      port: 9187
      targetPort: 9187
  type: ClusterIP