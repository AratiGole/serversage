apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-data
  namespace: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard   # Adjust to your cluster's StorageClass
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: postgres
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
      annotations:
        fluentbit.io/parser: "postgres"  # Specify parser for Redis logs
        logging: "enabled" 
        # Fluentd logging options can be configured via annotations or sidecar logging agents
        fluentd.io/tag: postgres.logs
        fluentd.io/address: fluent-bit.logging.svc.cluster.local:24224
        fluentd.io/async-connect: "true"
        fluentd.io/retry-wait: 1s
        fluentd.io/max-retries: "30"
    spec:
      containers:
      - name: postgresql
        image: bitnami/postgresql:16
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRESQL_USERNAME
          value: "postgres"               # Change as needed
        - name: POSTGRESQL_PASSWORD
          value: "postgres"        # Use Secrets in production
        - name: POSTGRESQL_DATABASE
          value: "postgres"          # Change as needed
        volumeMounts:
        - name: postgredb
          mountPath: /bitnami/postgresql
        resources:
          limits:
            memory: 512Mi
            cpu: "0.5"
          requests:
            memory: 256Mi
            cpu: "0.25"
      volumes:
      - name: postgredb
        persistentVolumeClaim:
          claimName: postgresql-data
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: postgres
  labels:
    app: postgresql
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgresql
    nodePort: 30013
  selector:
    app: postgresql